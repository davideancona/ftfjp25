@article{RML2021,
  author  = {Davide Ancona and Luca Franceschini and Angelo Ferrando and Viviana Mascardi},
  title   = {{{RML}: {T}heory and practice of a domain specific language for runtime verification}},
  journal = {Sci. Comput. Program.},
  volume  = {205},
  year    = {2021},
  pages   = {102610},
  doi     = {10.1016/J.SCICO.2021.102610}
}

@article{StromYemini86,
  author    = {Robert E. Strom and
               Shaula Yemini},
  title     = {Typestate: {A} Programming Language Concept for Enhancing Software
               Reliability},
  volume    = {12},
  number    = {1},
  pages     = {157--171},
  year      = {1986},
  url       = {https://doi.org/10.1109/TSE.1986.6312929},
  doi       = {10.1109/TSE.1986.6312929},
  timestamp = {Wed, 17 May 2017 10:56:35 +0200},
  biburl    = {https://dblp.org/rec/journals/tse/StromY86.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{BacchianiBGMR22,
  author    = {Lorenzo Bacchiani and
               Mario Bravetti and
               Marco Giunti and
               Jo{\~{a}}o Mota and
               Ant{\'{o}}nio Ravara},
  title     = {A {Java} typestate checker supporting inheritance},
  journal   = {Sci. Comput. Program.},
  volume    = {221},
  pages     = {102844},
  year      = {2022},
  url       = {https://doi.org/10.1016/j.scico.2022.102844},
  doi       = {10.1016/J.SCICO.2022.102844},
  timestamp = {Mon, 03 Mar 2025 22:21:55 +0100},
  biburl    = {https://dblp.org/rec/journals/scp/BacchianiBGMR22.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{MotaGR21,
  author    = {Jo{\~{a}}o Mota and
               Marco Giunti and
               Ant{\'{o}}nio Ravara},
  editor    = {Ferruccio Damiani and
               Ornela Dardha},
  title     = {Java Typestate Checker},
  booktitle = {Coordination Models and Languages - 23rd {IFIP} {WG} 6.1 International
               Conference, {COORDINATION} 2021, Held as Part of the 16th International
               Federated Conference on Distributed Computing Techniques, DisCoTec
               2021, Valletta, Malta, June 14-18, 2021, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {12717},
  pages     = {121--133},
  publisher = {Springer},
  year      = {2021},
  url       = {https://doi.org/10.1007/978-3-030-78142-2\_8},
  doi       = {10.1007/978-3-030-78142-2\_8},
  timestamp = {Tue, 13 Jul 2021 13:27:55 +0200},
  biburl    = {https://dblp.org/rec/conf/coordination/MotaGR21.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{CarboneHY07,
  author    = {Marco Carbone and
               Kohei Honda and
               Nobuko Yoshida},
  editor    = {Rocco De Nicola},
  title     = {Structured Communication-Centred Programming for Web Services},
  booktitle = {Programming Languages and Systems, 16th European Symposium on Programming,
               {ESOP} 2007, Held as Part of the Joint European Conferences on Theory
               and Practics of Software, {ETAPS} 2007, Braga, Portugal, March 24
               - April 1, 2007, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {4421},
  pages     = {2--17},
  publisher = {Springer},
  year      = {2007},
  url       = {https://doi.org/10.1007/978-3-540-71316-6\_2},
  doi       = {10.1007/978-3-540-71316-6\_2},
  timestamp = {Sun, 15 Jan 2023 14:30:24 +0100},
  biburl    = {https://dblp.org/rec/conf/esop/CarboneHY07.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Honda93,
  author    = {Kohei Honda},
  editor    = {Eike Best},
  title     = {Types for Dyadic Interaction},
  booktitle = {{CONCUR} '93, 4th International Conference on Concurrency Theory,
               Hildesheim, Germany, August 23-26, 1993, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {715},
  pages     = {509--523},
  publisher = {Springer},
  year      = {1993},
  url       = {https://doi.org/10.1007/3-540-57208-2\_35},
  doi       = {10.1007/3-540-57208-2\_35},
  timestamp = {Sun, 15 Jan 2023 14:34:35 +0100},
  biburl    = {https://dblp.org/rec/conf/concur/Honda93.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{AnconaBB0CDGGGH16,
  author  = {Davide Ancona and Viviana Bono and Mario Bravetti and Joana Campos and Giuseppe Castagna and Pierre{-}Malo Deni{\'{e}}lou and Simon J. Gay and Nils Gesbert and Elena Giachino and Raymond Hu and Einar Broch Johnsen and Francisco Martins and Viviana Mascardi and Fabrizio Montesi and Rumyana Neykova and Nicholas Ng and Luca Padovani and Vasco T. Vasconcelos and Nobuko Yoshida},
  title   = {Behavioral Types in Programming Languages},
  journal = {Found. Trends Program. Lang.},
  volume  = {3},
  number  = {2-3},
  year    = {2016},
  pages   = {95--230},
  doi     = {10.1561/2500000031}
}

@article{GarciaTWA14,
  author    = {Ronald Garcia and
               {\'{E}}ric Tanter and
               Roger Wolff and
               Jonathan Aldrich},
  title     = {Foundations of Typestate-Oriented Programming},
  journal   = {{ACM} Trans. Program. Lang. Syst.},
  volume    = {36},
  number    = {4},
  pages     = {12:1--12:44},
  year      = {2014},
  url       = {https://doi.org/10.1145/2629609},
  doi       = {10.1145/2629609},
  timestamp = {Tue, 21 Mar 2023 21:12:11 +0100},
  biburl    = {https://dblp.org/rec/journals/toplas/GarciaTWA14.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{VoineaDG20,
  author    = {A. Laura Voinea and
               Ornela Dardha and
               Simon J. Gay},
  editor    = {Alexey Gotsman and
               Ana Sokolova},
  title     = {Typechecking {J}ava Protocols with {[St]Mungo}},
  booktitle = {Formal Techniques for Distributed Objects, Components, and Systems
               - 40th {IFIP} {WG} 6.1 International Conference, {FORTE} 2020, Held
               as Part of the 15th International Federated Conference on Distributed
               Computing Techniques, DisCoTec 2020, Valletta, Malta, June 15-19,
               2020, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {12136},
  pages     = {208--224},
  publisher = {Springer},
  year      = {2020},
  url       = {https://doi.org/10.1007/978-3-030-50086-3\_12},
  doi       = {10.1007/978-3-030-50086-3\_12},
  timestamp = {Tue, 16 Jun 2020 17:17:56 +0200},
  biburl    = {https://dblp.org/rec/conf/forte/VoineaDG20.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{KouzapasDPG18,
  author    = {Dimitrios Kouzapas and
               Ornela Dardha and
               Roly Perera and
               Simon J. Gay},
  title     = {Typechecking protocols with {Mungo} and {StMungo}: {A} session type toolchain
               for Java},
  journal   = {Sci. Comput. Program.},
  volume    = {155},
  pages     = {52--75},
  year      = {2018},
  url       = {https://doi.org/10.1016/j.scico.2017.10.006},
  doi       = {10.1016/J.SCICO.2017.10.006},
  timestamp = {Mon, 03 Mar 2025 22:21:56 +0100},
  biburl    = {https://dblp.org/rec/journals/scp/KouzapasDPG18.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{LangrHT15,
  author    = {Langr, Jeff and Hunt, Andy and Thomas, Dave},
  title     = {Pragmatic Unit Testing in Java 8 with JUnit},
  year      = {2015},
  isbn      = {1941222595},
  publisher = {Pragmatic Bookshelf},
  edition   = {1st},
  abstract  = {The Pragmatic Programmers classic is back! Freshly updated for modern software development, Pragmatic Unit Testing in Java 8 With JUnit teaches you how to write and run easily maintained unit tests in JUnit with confidence. You'll learn mnemonics to help you know what tests to write, how to remember all the boundary conditions, and what the qualities of a good test are. You'll see how unit tests can pay off by allowing you to keep your system code clean, and you'll learn how to handle the stuff that seems too tough to test.Pragmatic Unit Testing in Java 8 With JUnit steps you through all the important unit testing topics. If you've never written a unit test, you'll see screen shots from Eclipse, IntelliJ IDEA, and NetBeans that will help you get past the hard part--getting set up and started.Once past the basics, you'll learn why you want to write unit tests and how to effectively use JUnit. But the meaty part of the book is its collected unit testing wisdom from people who've been there, done that on production systems for at least 15 years: veteran author and developer Jeff Langr, building on the wisdom of Pragmatic Programmers Andy Hunt and Dave Thomas. You'll learn:How to craft your unit tests to minimize your effort in maintaining them. How to use unit tests to help keep your system clean.How to test the tough stuff.Memorable mnemonics to help you remember what's important when writing unit tests.How to help your team reap and sustain the benefits of unit testing.You won't just learn about unit testing in theory--you'll work through numerous code examples. When it comes to programming, hands-on is the only way to learn!}
}

@inproceedings{FardM17,
  author    = {Fard, Amin Milani and Mesbah, Ali},
  booktitle = {2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
  title     = {JavaScript: The (Un)Covered Parts},
  year      = {2017},
  volume    = {},
  number    = {},
  pages     = {230-240},
  keywords  = {Tools;Measurement;Testing;Libraries;Production;Browsers;Writing;JavaScript applications;testing;empirical study;test quality;code coverage},
  doi       = {10.1109/ICST.2017.28}
}
  

